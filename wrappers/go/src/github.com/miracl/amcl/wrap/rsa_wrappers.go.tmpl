// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Generated by gen/wrappers/main.go from wrap/wrappers.go.tmpl.

package wrap

{{if ne .Suffix ""}}
// #cgo LDFLAGS: -lamcl_rsa_{{.Suffix}}
// #include "rsa_{{.Suffix}}.h"{{end}}
// #include "rsa_support.h"
import "C"

{{if ne .Suffix ""}}
const (
    RFS_{{.Suffix}} = int(C.RFS_{{.Suffix}}) // RFS_{{.Suffix}} is the RSA Public Key Size in bytes
    FFLEN_{{.Suffix}} = int(C.FFLEN_{{.Suffix}}) // FFLEN_{{.Suffix}} consists in 2^n multiplier of BIGBITS to specify supported Finite Field size, e.g 2048=256*2^3 where BIGBITS=256
    HASH_TYPE_RSA_{{.Suffix}} int = int(C.HASH_TYPE_RSA_{{.Suffix}}) // HASH_TYPE_RSA_{{.Suffix}} is the chosen Hash algorithm
)

func NewRSAPrivateKey_{{.Suffix}}() RSAPrivateKey {
	return &C.rsa_private_key_{{.Suffix}}{}
}

func NewRSAPublicKey_{{.Suffix}}() RSAPublicKey {
	return &C.rsa_public_key_{{.Suffix}}{}
}
{{end}}

{{template "goNativeWrappers" .Funcs}}
